generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id         String   @id @default(uuid())
  content    String?
  postedDate DateTime @default(now())
  authorId   String
  user       User     @relation(fields: [authorId], references: [id])
  channelId  String
  channel    Channel  @relation(fields: [channelId], references: [id])

  @@map("post")
}

model Channel {
  id       String @id @default(uuid())
  posts    Post[]
  name     String
  serverId String
  server   Server @relation(fields: [serverId], references: [id])

  @@unique([serverId, name])
  @@map("channel")
}

model Server {
  id       String    @id @default(uuid())
  channels Channel[]
  name     String
  members  User[]

  @@map("server")
}

model User {
  id            String    @id @default(uuid())
  email         String
  name          String?
  posts         Post[]
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  role          Role      @default(USER)
  sessions      Session[]
  accounts      Account[]
  server        Server[]

  @@unique([email])
  @@map("user")
}

enum Role {
  USER
  ADMIN
}

model Session {
  id        String   @id @default(uuid())
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id @default(uuid())
  accountId             String    @unique
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id @default(uuid())
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
